一、assert断言

1.概念：assert 宏的原型定义在 assert.h 中，其作用是如果它的条件返回错误，则终止程序执行。

#include "assert.h" 
void assert( int expression );

assert 的作用是现计算表达式 expression ，如果其值为假（即为0），那么它先向 stderr 打印一条出错信息,然后通过调用 abort 来终止程序运行。

{#####stderr
在linux中经常会看到stdin，stdout和stderr，这3个可以称为终端（Terminal）的标准输入（standard input），标准输出（ standard out）和标准错误输出（standard error）。

stdout -- 标准输出设备 (printf("..")) 同 stdout。
stderr -- 标准错误输出设备
两者默认向屏幕输出。
但如果用转向标准输出到磁盘文件，则可看出两者区别。stdout输出到磁盘文件，stderr在屏幕。
用法：
fprintf(stderr, "Can't open it!\n");
fprintf(stdout, "Can't open it!\n");

stdin -- 标准输入设备.
用法：
char s[80];
fputs(fgets(s,80,stdin);
}

2.性能影响：使用 assert 的缺点是，频繁的调用会极大的影响程序的性能，增加额外的开销。

3.assert禁用：在调试结束后，可以通过在包含 #include 的语句之前插入 #define NDEBUG 来禁用 assert 调用，示例代码如下：
#include 
#define NDEBUG 
#include

